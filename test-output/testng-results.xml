<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-06-02T19:13:26 NZST" name="Default suite" finished-at="2021-06-02T19:15:47 NZST" duration-ms="140583">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.ParabankTest@27ff5d15]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2021-06-02T19:13:26 NZST" name="Default test" finished-at="2021-06-02T19:15:47 NZST" duration-ms="140583">
      <class name="runner.ParabankTest">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:runner.ParabankTest@27ff5d15]" started-at="2021-06-02T19:13:27 NZST" name="setUpClass" finished-at="2021-06-02T19:13:31 NZST" duration-ms="4047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="setupwindow()[pri:0, instance:runner.ParabankTest@27ff5d15]" started-at="2021-06-02T19:13:31 NZST" name="setupwindow" finished-at="2021-06-02T19:14:00 NZST" duration-ms="28813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupwindow -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.ParabankTest@27ff5d15]" started-at="2021-06-02T19:14:00 NZST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-06-02T19:14:02 NZST" duration-ms="2837" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify that the user able to transfer the funds from the funds transfer tab."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Parabank webpage]"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step "User able to launch the parabank website" is undefined. You can implement it using the snippet(s) below:

@Given("User able to launch the parabank website")
public void user_able_to_launch_the_parabank_website() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step "User able to launch the parabank website" is undefined. You can implement it using the snippet(s) below:

@Given("User able to launch the parabank website")
public void user_able_to_launch_the_parabank_website() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:102)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$0(TestNGCucumberRunner.java:117)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:117)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:113)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:31)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="closeDown()[pri:0, instance:runner.ParabankTest@27ff5d15]" started-at="2021-06-02T19:14:03 NZST" name="closeDown" finished-at="2021-06-02T19:14:06 NZST" duration-ms="3596" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDown -->
        <test-method is-config="true" signature="setupwindow()[pri:0, instance:runner.ParabankTest@27ff5d15]" started-at="2021-06-02T19:14:06 NZST" name="setupwindow" finished-at="2021-06-02T19:14:20 NZST" duration-ms="13458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupwindow -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.ParabankTest@27ff5d15]" started-at="2021-06-02T19:14:20 NZST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-06-02T19:14:20 NZST" duration-ms="71" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["verify that the user able to enter into the account using login credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[parabank]"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step "User able to launch the parabank website" is undefined. You can implement it using the snippet(s) below:

@Given("User able to launch the parabank website")
public void user_able_to_launch_the_parabank_website() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step "User able to launch the parabank website" is undefined. You can implement it using the snippet(s) below:

@Given("User able to launch the parabank website")
public void user_able_to_launch_the_parabank_website() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:102)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$0(TestNGCucumberRunner.java:117)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:117)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:113)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:31)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="closeDown()[pri:0, instance:runner.ParabankTest@27ff5d15]" started-at="2021-06-02T19:14:20 NZST" name="closeDown" finished-at="2021-06-02T19:14:26 NZST" duration-ms="6059" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDown -->
        <test-method is-config="true" signature="setupwindow()[pri:0, instance:runner.ParabankTest@27ff5d15]" started-at="2021-06-02T19:14:26 NZST" name="setupwindow" finished-at="2021-06-02T19:14:42 NZST" duration-ms="16496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupwindow -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.ParabankTest@27ff5d15]" started-at="2021-06-02T19:14:42 NZST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-06-02T19:15:32 NZST" duration-ms="49758" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User able to register an account in parabankwebsite."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[parabank]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="closeDown()[pri:0, instance:runner.ParabankTest@27ff5d15]" started-at="2021-06-02T19:15:32 NZST" name="closeDown" finished-at="2021-06-02T19:15:43 NZST" duration-ms="10867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDown -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.ParabankTest@27ff5d15]" started-at="2021-06-02T19:15:43 NZST" name="tearDownClass" finished-at="2021-06-02T19:15:47 NZST" duration-ms="4158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.ParabankTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
